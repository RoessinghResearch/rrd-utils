plugins {
	id 'java'
	id 'java-library'
	id 'distribution'
	id 'maven-publish'
	id 'signing'
}

group = 'nl.rrd'
version = '3.0.2'

repositories {
	mavenCentral()
}

base {
	archivesName = 'rrd-utils'
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

dependencies {
	api 'com.fasterxml.jackson.core:jackson-core:2.16.1'
	api 'com.fasterxml.jackson.core:jackson-annotations:2.16.1'
	api 'com.fasterxml.jackson.core:jackson-databind:2.16.1'
	api 'org.apache.httpcomponents.client5:httpclient5:5.3.1'
	api 'org.slf4j:slf4j-api:2.0.11'
	testImplementation 'junit:junit:4.13.2'
}

tasks.withType(JavaCompile) {
	options.deprecation = true
}

distributions {
	main {
		contents {
			from configurations.compileClasspath
		}
	}
}

java {
	withJavadocJar()
	withSourcesJar()
}

distributions {
	main {
		distributionBaseName = base.archivesName.get()
		contents {
			from configurations.compileClasspath
			from jar
		}
	}
}

[distZip, distTar, installDist]*.dependsOn jar

javadoc {
	options {
		links 'https://docs.oracle.com/en/java/javase/11/docs/api/'
		addBooleanOption('Xdoclint:all,-missing,-html', true)
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId = base.archivesName.get()
			from components.java
			
			pom {
				name = 'RRD Utils'
				description = 'General purpose utils used in software by Roessingh Research and Development and the WOOL platform'
				url = 'https://github.com/RoessinghResearch/rrd-utils'
				
				licenses {
					license {
						name = 'MIT License'
						url = 'https://opensource.org/licenses/MIT'
					}
				}
				
				developers {
					developer {
						id = 'dhofs'
						name = 'Dennis Hofs'
						email = 'd.hofs@rrd.nl'
					}
				}
				
				scm {
					connection = 'scm:git:git://github.com/RoessinghResearch/rrd-utils.git'
					developerConnection = 'scm:git:ssh://github.com:RoessinghResearch/rrd-utils.git'
					url = 'https://github.com/RoessinghResearch/rrd-utils/tree/master'
				}
			}
		}
	}
	repositories {
		maven {
			def sonatypeUsername = project.properties.ossrhUsername
			if (!sonatypeUsername)
				sonatypeUsername = ''
			def sonatypePassword = project.properties.ossrhPassword
			if (!sonatypePassword)
				sonatypePassword = ''
			def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
			def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
			url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
			credentials {
				username sonatypeUsername
				password sonatypePassword
			}
		}
	}
}

signing {
	sign publishing.publications.mavenJava
}
